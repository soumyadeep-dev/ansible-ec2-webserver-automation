- hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        instance_type: t2.micro
        image_id: ami-0c7217cdde317cfec
        region: us-east-1
        wait: yes
        security_groups: sg-09cba8dde8528dcc8
        key_name: ansible2
      register: ec2

    - name: Wait for instance to become available
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        state: started
      with_items: "{{ ec2.instances }}"

    - name: Add instance to Ansible inventory
      add_host:
        hostname: "{{ item.public_dns_name }}"
        ansible_host: "{{ item.public_ip_address }}"
        ansible_ssh_private_key_file: /home/ubuntu/ansible-ec2/ansible2.pem
        ansible_user: ubuntu
        groupname: launched
      with_items: "{{ ec2.instances }}"

- hosts: launched
  become: yes

  tasks:
    - name: Install Nginx
      package:
        name: nginx
        state: present

    - name: Copy website files
      copy:
        src: /home/ubuntu/ansible-ec2/neogym-html
        dest: /var/www/html/

    - name: Copy Dockerfile
      copy:
        src: /home/ubuntu/ansible-ec2/Dockerfile
        dest: /var/www/html/

    - name: Create Nginx configuration file
      template:
        src: /home/ubuntu/ansible-ec2/nginx.conf.j2
        dest: /etc/nginx/sites-available/default
      notify:
        - Restart Nginx

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Build Docker image
      command: "docker build -t mygym:latest /var/www/html/"
      args:
        chdir: /var/www/html/

    - name: Run Docker container
      command: "docker run -d -p 9090:80 --name my-gym mygym:latest"
      notify:
        - Restart Docker Container

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    - name: Restart Docker Container
      command: "docker restart my-app"
